# deployment
kind: Deployment
apiVersion: apps/v1
metadata:
  name: "${APP_NAME}"
  labels:
    app: "${APP_LABEL}"
spec:
  revisionHistoryLimit: 3
  replicas: ${NUM_REPLICAS}
  selector:
    matchLabels:
      app: "${APP_LABEL}"
  template:
    metadata:
      labels:
        app: "${APP_LABEL}"
    spec:
      imagePullSecrets:
      - name: "gitlab-auth-${NAMESPACE}"
      containers:
      - name: "${APP_NAME}"
        image: "$IMAGE_NAME:$VERSION"
        ports:
          - containerPort: ${APP_PORT}
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: SECRET_KEY
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: DB_PASSWORD
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: DB_PORT
        - name: SOCIAL_AUTH_FACEBOOK_KEY
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: SOCIAL_AUTH_FACEBOOK_KEY
        - name: SOCIAL_AUTH_FACEBOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: SOCIAL_AUTH_FACEBOOK_SECRET
        - name: SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET
        - name: SOCIAL_AUTH_GOOGLE_OAUTH2_KEY
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: SOCIAL_AUTH_GOOGLE_OAUTH2_KEY
        - name: EMAIL_HOST
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: EMAIL_HOST
        - name: EMAIL_PORT
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: EMAIL_PORT
        - name: EMAIL_HOST_USER
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: EMAIL_HOST_USER
        - name: EMAIL_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: EMAIL_HOST_PASSWORD
        - name: EMAIL_USE_TLS
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: EMAIL_USE_TLS
        - name: APPLICATION_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: APPLICATION_CLIENT_ID
        - name: APPLICATION_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: APPLICATION_CLIENT_SECRET
        - name: GOOGLE_RECAPTCHA_KEY
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: GOOGLE_RECAPTCHA_KEY
        - name: GOOGLE_RECAPTCHA_SECRET
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: GOOGLE_RECAPTCHA_SECRET
        - name: DEV_URL
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: DEV_URL
        - name: DEV_FE_URL
          valueFrom:
            secretKeyRef:
              name: "${APP_NAME}-credentials"
              key: DEV_FE_URL
        - name: ENVIRONMENT
          value: "${ENVIRONMENT}"
        - name: SERVICE_NAME
          value: "${APP_NAME}"
        - name: DC_ENV
          value: "${DC_ENV}"
        - name: APP_PORT
          value: "${APP_PORT}"
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        imagePullPolicy: Always
        # livenessProbe:
        #   httpGet:
        #     path: /metrics
        #     port: ${APP_PORT}
        #   initialDelaySeconds: ${LIVENESS_INITIAL_DELAY_SECONDS}
        #   periodSeconds: 3
        #   timeoutSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /metrics
        #     port: ${APP_PORT}
        #   initialDelaySeconds: ${READINESS_INITIAL_DELAY_SECONDS}
        #   periodSeconds: 3
        #   timeoutSeconds: 10
        resources:
          limits:
            cpu: "${CPU_LIMIT}"
            memory: "${MEMORY_LIMIT}"
          requests:
            cpu: "${CPU_REQUEST}"
            memory: "${MEMORY_REQUEST}"
      securityContext:
        runAsUser: 10001
        sysctls:
        - name: net.ipv4.ip_unprivileged_port_start
          value: "80"
      volumes:
      - name: tmp
        emptyDir:
          sizeLimit: 1Mi
